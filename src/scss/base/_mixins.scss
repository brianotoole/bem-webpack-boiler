/**
  * MIXINS
  */

@function power($number, $power) {
    $exponent: 1;

    @if $power > 0 {
        @for $i from 1 through $power {
            $exponent: $exponent * $number;
        }
    } @else {
        @for $i from $power to 0 {
            $exponent: $exponent / $number;
        }
    }

    @return $exponent;
}

/**
  * MIXINS
  * USAGE:
  font-size: font-scale(3);
  */
@function font-scale($x) {  
  @return power($font-ratio, $x) * $font-base-font-size;
};


/**
  * MEDIA QUERIES MIXIN
  * MOBILE FIRST APPROACH
  * DEFAULT RULES SET FOR MOBILE
  * USAGE: 
    @include bp_md {
      width: 500px;
    }
  */

// above bp_sm
@mixin bp_sm {
  @media (min-width: #{$bp_sm}) {
    @content;
  }
}

// above bp_md
@mixin bp_md {
  @media (min-width: #{$bp_md}) {
    @content;
  }
}

// above bp_lg
@mixin bp_lg {
  @media (min-width: #{$bp_lg}) {
    @content;
  }
}

/**
  * PX TO REM CONVERSION
  * USAGE:
  * .class {font-size: rem(20)};
  */
$baseFontSize : 16; 
@function rem($pixels, $context: $baseFontSize) {
  @if (unitless($pixels)) {
    $pixels: $pixels * 1px;
  }
  @if (unitless($context)) {
    $context: $context * 1px;
  }
  @return $pixels / $context * 1rem;
}

/**
  * CLEARFIX
  * USAGE:
  * @include clearFix();
  */
@mixin clearFix() {
  &:before,
  &:after{
    content: " "; 
    display: table; 
  }

  &:after{
    display: block;
    clear: both;
    height: 1px;
    margin-top: -1px;
    visibility: hidden;
  }
  &{
    *zoom: 1;
  }
}